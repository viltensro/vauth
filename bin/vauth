#!/bin/bash
#
# chkconfig: - 91 35
# description: Starts and stops the Vauth
#
# pidfile: /var/run/vauth.pid
# config:  config/vauth.conf

##########
# Vilten, 2017
# Viliam Tencer
# Vauth - startup script
#########

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

APP_NAME=Vauth
APP_PID=/var/run/branch-vauth.pid

case "$1" in

'start')
	if [ -e $APP_PID ]; then
		echo $APP_NAME is already running
		exit 1
	else
		echo -n "$APP_NAME starting..."
                cd ..
                DB_TYPE=`grep VAUTH_DB_TYPE config/vauth.conf|grep -v \#|cut -d'=' -f2`
                DB_USER=`grep VAUTH_DB_USER config/vauth.conf|grep -v \#|cut -d'=' -f2`
                DB_PASS=`grep VAUTH_DB_PASS config/vauth.conf|grep -v \#|cut -d'=' -f2`
                DB_HOST=`grep VAUTH_DB_HOST config/vauth.conf|grep -v \#|cut -d'=' -f2`
                DB_PORT=`grep VAUTH_DB_PORT config/vauth.conf|grep -v \#|cut -d'=' -f2`
                DB_DB=`grep VAUTH_DB_DATABASE config/vauth.conf|grep -v \#|cut -d'=' -f2`

                #class name
                case "$DB_TYPE" in
                'postgresql')
                        DB_CLASS_NAME=org.postgresql.ds.PGSimpleDataSource
                        ;;
                *)
                        DB_CLASS_NAME=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
                esac

                export VAUTH_DB_CLASS_NAME=$DB_CLASS_NAME
                export VAUTH_DB_TYPE=$DB_TYPE
                export VAUTH_DB_URL=//$DB_HOST:$DB_PORT/$DB_DB
                export VAUTH_DB_USER=$DB_USER
                export VAUTH_DB_PASS=$DB_PASS

		java -jar lib/vauth-boot 1>/dev/null 2>/dev/null &

		echo $!>$APP_PID
		echo "success"
	fi
	;;
'stop')
        if [ -e $APP_PID ]; then
                echo -n "$APP_NAME stopping..."
                kill -9 `cat $APP_PID`
                rm -f $APP_PID
                echo "success"
        else
          echo $APP_NAME is NOT running
          #kill -9 $(ps aux | grep -i 'java -jar' | grep -i 'vauth' | awk '{print $2}')
          exit 1
        fi
	;;
'restart')
	$0 stop
	$0 start
	;;
'status')
	if [ -e $APP_PID ]; then
	  echo $APP_NAME is running, pid=`cat $APP_PID`
	else
	  echo $APP_NAME is NOT running
	  exit 1
	fi
	;;
*)
	echo "Usage $0 {start|stop|restart|status}"
esac

exit 0

